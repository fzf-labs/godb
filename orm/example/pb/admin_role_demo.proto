syntax = "proto3";

package api.gorm_gen.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
//import "google/protobuf/timestamp.proto";
//import "validate/validate.proto"; use buf first
option go_package = "api/gorm_gen/v1;v1";

//系统-角色
service AdminRoleDemo {
  //系统-角色-创建一条数据
  rpc CreateAdminRoleDemo(CreateAdminRoleDemoReq) returns (CreateAdminRoleDemoReply) {
    option (google.api.http) = {
      post: "/api/gorm_gen/v1/admin_role_demo/create"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-角色-更新一条数据
  rpc UpdateAdminRoleDemo(UpdateAdminRoleDemoReq) returns (UpdateAdminRoleDemoReply) {
    option (google.api.http) = {
      post: "/api/gorm_gen/v1/admin_role_demo/update"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-角色-更新状态
  rpc UpdateAdminRoleDemoStatus(UpdateAdminRoleDemoStatusReq) returns (UpdateAdminRoleDemoStatusReply) {
    option (google.api.http) = {
      post: "/api/gorm_gen/v1/admin_role_demo/update/status"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-角色-删除多条数据
  rpc DeleteAdminRoleDemo(DeleteAdminRoleDemoReq) returns (DeleteAdminRoleDemoReply) {
    option (google.api.http) = {
      post: "/api/gorm_gen/v1/admin_role_demo/delete"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-角色-单条数据查询
  rpc GetAdminRoleDemoInfo(GetAdminRoleDemoInfoReq) returns (GetAdminRoleDemoInfoReply) {
    option (google.api.http) = {get: "/api/gorm_gen/v1/admin_role_demo/info"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
  //系统-角色-列表数据查询
  rpc GetAdminRoleDemoList(GetAdminRoleDemoListReq) returns (GetAdminRoleDemoListReply) {
    option (google.api.http) = {get: "/api/gorm_gen/v1/admin_role_demo/list"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: {
          name: "Authorization"
          description: "Bearer Token"
          type: STRING
          required: true
        }
      }
    };
  }
}
//系统-角色信息
message AdminRoleDemoInfo {
  string id = 1; // 编号
	string pid = 2; // 父级id
	string name = 3; // 名称
	string remark = 4; // 备注
	int32 status = 5; // 0=禁用 1=开启
	int32 sort = 6; // 排序值
	string createdAt = 7; // 创建时间
	string updatedAt = 8; // 更新时间
}

//请求-系统-角色-创建一条数据
message CreateAdminRoleDemoReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [pid,name,status,sort]
    }
  };
  string pid = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 父级id
	string name = 2 [(buf.validate.field).string={min_len: 1, max_len: 50}]; // 名称
	string remark = 3 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 200}]; // 备注
	int32 status = 4 [(buf.validate.field).int32={gt: 0, lte: 16}]; // 0=禁用 1=开启
	int32 sort = 5 [(buf.validate.field).int32={gt: 0, lte: 64}]; // 排序值
}

//响应-系统-角色-创建一条数据
message CreateAdminRoleDemoReply {
  	string id = 1; // 编号
}

//请求-系统-角色-更新一条数据
message UpdateAdminRoleDemoReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [id,pid,name,status,sort]
    }
  };
  string id = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 编号
	string pid = 2 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 父级id
	string name = 3 [(buf.validate.field).string={min_len: 1, max_len: 50}]; // 名称
	string remark = 4 [(buf.validate.field).ignore=IGNORE_IF_UNPOPULATED,(buf.validate.field).string={min_len: 1, max_len: 200}]; // 备注
	int32 status = 5 [(buf.validate.field).int32={gt: 0, lte: 16}]; // 0=禁用 1=开启
	int32 sort = 6 [(buf.validate.field).int32={gt: 0, lte: 64}]; // 排序值
}

//响应-系统-角色-更新一条数据
message UpdateAdminRoleDemoReply {}

//请求-系统-角色-更新状态
message UpdateAdminRoleDemoStatusReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [id,status]
    }
  };
  string id = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 编号
	int32 status = 2 [(buf.validate.field).int32={gt: 0, lte: 16}]; // 0=禁用 1=开启
}

//响应-系统-角色-更新状态
message UpdateAdminRoleDemoStatusReply {}

//请求-系统-角色-删除多条数据
message DeleteAdminRoleDemoReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [id]
    }
  };
  string id = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 编号
}

//响应-系统-角色-删除多条数据
message DeleteAdminRoleDemoReply {}

//请求-系统-角色-单条数据查询
message GetAdminRoleDemoInfoReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [id]
    }
  };
  string id = 1 [(buf.validate.field).string={min_len: 1, max_len: 128}]; // 编号
}

//响应-系统-角色-单条数据查询
message GetAdminRoleDemoInfoReply {
  AdminRoleDemoInfo info = 1;
}

//请求-系统-角色-列表数据查询
message GetAdminRoleDemoListReq {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      required: [
        "page",
        "pageSize"
      ]
    }
  };
  int32 page = 1; //页码
  int32 pageSize = 2; //页数
}

//响应-系统-角色-列表数据查询
message GetAdminRoleDemoListReply {
  int32 total = 1; //总数
  repeated AdminRoleDemoInfo list = 2; // 列表数据
}

